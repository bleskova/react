{"ast":null,"code":"import _toConsumableArray from\"/Users/ekaterina/Documents/GitHub/react/lesson3/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/ekaterina/Documents/GitHub/react/lesson3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ekaterina/Documents/GitHub/react/lesson3/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/ekaterina/Documents/GitHub/react/lesson3/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/ekaterina/Documents/GitHub/react/lesson3/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ekaterina/Documents/GitHub/react/lesson3/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import CustomInput from\"./components/CustomInput/index\";import List from\"./components/List/index\";import Task from\"./components/Task/index\";import'./App.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Main=/*#__PURE__*/function(_React$Component){_inherits(Main,_React$Component);var _super=_createSuper(Main);function Main(props){var _this;_classCallCheck(this,Main);_this=_super.call(this,props);_this.state={tasks:[{id:0,title:'task1',done:false},{id:1,title:'task2',done:true},{id:2,title:'task3',done:false}],newTask:''};_this.addTask=_this.addTask.bind(_assertThisInitialized(_this));_this.changeInput=_this.changeInput.bind(_assertThisInitialized(_this));return _this;}_createClass(Main,[{key:\"addTask\",value:function addTask(){var _this$state=this.state,tasks=_this$state.tasks,newTask=_this$state.newTask;newTask&&this.setState({tasks:[].concat(_toConsumableArray(this.state.tasks),[{id:tasks.length,title:newTask,done:false}]),newTask:''});}},{key:\"changeInput\",value:function changeInput(e){this.setState({newTask:e.target.value});console.log(this.state.newTask);}},{key:\"render\",value:function render(){var _this2=this;var tasks=this.state.tasks;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h1\",{children:[\"Active tasks: \",tasks.length]})}),/*#__PURE__*/_jsx(CustomInput,{change:function change(e){return _this2.changeInput(e);}}),/*#__PURE__*/_jsx(Task,{addChange:this.addTask}),tasks.map(function(task){return/*#__PURE__*/_jsx(List,{task:task});})]});}}]);return Main;}(React.Component);export default Main;// CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач","map":{"version":3,"sources":["/Users/ekaterina/Documents/GitHub/react/lesson3/src/Main.jsx"],"names":["React","CustomInput","List","Task","Main","props","state","tasks","id","title","done","newTask","addTask","bind","changeInput","setState","length","e","target","value","console","log","map","task","Component"],"mappings":"oxBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,yBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,yBAAjB,CAEA,MAAO,WAAP,C,2FAGMC,CAAAA,I,wGACF,cAAYC,KAAZ,CAAmB,sCACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,KAAK,CAAE,CACH,CAACC,EAAE,CAAE,CAAL,CAAQC,KAAK,CAAE,OAAf,CAAwBC,IAAI,CAAE,KAA9B,CADG,CAEH,CAACF,EAAE,CAAE,CAAL,CAAQC,KAAK,CAAE,OAAf,CAAwBC,IAAI,CAAE,IAA9B,CAFG,CAGH,CAACF,EAAE,CAAE,CAAL,CAAQC,KAAK,CAAE,OAAf,CAAwBC,IAAI,CAAE,KAA9B,CAHG,CADE,CAMTC,OAAO,CAAE,EANA,CAAb,CAQA,MAAKC,OAAL,CAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf,CACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB,CAXe,aAYlB,C,wCACD,kBAAU,CACN,gBAAyB,KAAKP,KAA9B,CAAOC,KAAP,aAAOA,KAAP,CAAcI,OAAd,aAAcA,OAAd,CACAA,OAAO,EAAI,KAAKI,QAAL,CAAc,CACrBR,KAAK,8BAAM,KAAKD,KAAL,CAAWC,KAAjB,GAAwB,CAACC,EAAE,CAAED,KAAK,CAACS,MAAX,CACzBP,KAAK,CAAEE,OADkB,CAEzBD,IAAI,CAAE,KAFmB,CAAxB,EADgB,CAIrBC,OAAO,CAAE,EAJY,CAAd,CAAX,CAMH,C,2BACD,qBAAYM,CAAZ,CAAc,CACV,KAAKF,QAAL,CAAc,CACVJ,OAAO,CAAEM,CAAC,CAACC,MAAF,CAASC,KADR,CAAd,EAGAC,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWK,OAAvB,EACH,C,sBACD,iBAAS,iBACL,GAAOJ,CAAAA,KAAP,CAAgB,KAAKD,KAArB,CAAOC,KAAP,CACA,mBACI,oCACI,kCACI,uCAAmBA,KAAK,CAACS,MAAzB,GADJ,EADJ,cAII,KAAC,WAAD,EACI,MAAM,CAAE,gBAACC,CAAD,QAAO,CAAA,MAAI,CAACH,WAAL,CAAiBG,CAAjB,CAAP,EADZ,EAJJ,cAOI,KAAC,IAAD,EACI,SAAS,CAAE,KAAKL,OADpB,EAPJ,CAUKL,KAAK,CAACe,GAAN,CAAU,SAAAC,IAAI,qBAAI,KAAC,IAAD,EAAM,IAAI,CAAEA,IAAZ,EAAJ,EAAd,CAVL,GADJ,CAeH,C,kBA9CcvB,KAAK,CAACwB,S,EAiDzB,cAAepB,CAAAA,IAAf,CAEA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport List from \"./components/List/index\";\nimport Task from \"./components/Task/index\";\n\nimport './App.css';\n\n\nclass Main extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [\n                {id: 0, title: 'task1', done: false},\n                {id: 1, title: 'task2', done: true},\n                {id: 2, title: 'task3', done: false}\n            ],\n            newTask: ''\n        }\n        this.addTask = this.addTask.bind(this)\n        this.changeInput = this.changeInput.bind(this)\n    }\n    addTask() { \n        const {tasks, newTask} = this.state;\n        newTask && this.setState({\n            tasks: [...this.state.tasks, {id: tasks.length ,\n                title: newTask,\n                done: false}],\n            newTask: ''\n            }) \n    }\n    changeInput(e){\n        this.setState({\n            newTask: e.target.value \n        })\n        console.log(this.state.newTask);  \n    }\n    render() {\n        const {tasks} = this.state;\n        return (\n            <div>\n                <div>\n                    <h1>Active tasks: {tasks.length}</h1>\n                </div>\n                <CustomInput \n                    change={(e) => this.changeInput(e)} \n                />\n                <Task \n                    addChange={this.addTask}\n                />\n                {tasks.map(task => <List task={task}/>)\n                }\n            </div>\n        )\n    }\n}\n\nexport default Main;\n\n// CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач"]},"metadata":{},"sourceType":"module"}