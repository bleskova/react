{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Documents/GitHub/react/lesson3/src/Main.jsx\";\nimport React from \"react\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport List from \"./components/List/index\";\nimport Task from \"./components/Task/index\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      total: '0',\n      tasks: [{\n        id: 0,\n        title: 'task1',\n        done: false\n      }, {\n        id: 1,\n        title: 'task2',\n        done: true\n      }, {\n        id: 2,\n        title: 'task3',\n        done: false\n      }],\n      newTask: ''\n    };\n    this.addCart = this.addCart.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.changeInput = this.changeInput.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://fakestoreapi.com/products').then(res => res.json()).then(json => {\n      this.setState({\n        products: json\n      });\n    });\n  }\n\n  addCart() {\n    const {\n      products,\n      total\n    } = this.state;\n    console.log(products);\n  }\n\n  addTask() {\n    const {\n      tasks,\n      newTask\n    } = this.state;\n    newTask && this.setState({\n      tasks: [...this.state.tasks, {\n        id: tasks.length,\n        title: newTask,\n        done: false\n      }],\n      newTask: ''\n    });\n  }\n\n  changeInput(e) {\n    this.setState({\n      newTask: e.target.value\n    });\n    console.log(this.state.newTask);\n  }\n\n  render() {\n    const {\n      products,\n      total\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), products.length ? products.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"price\",\n          children: item.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCart(item),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 59\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main; // CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач","map":{"version":3,"sources":["/Users/ekaterina/Documents/GitHub/react/lesson3/src/Main.jsx"],"names":["React","CustomInput","List","Task","Main","Component","constructor","props","state","products","total","tasks","id","title","done","newTask","addCart","bind","addTask","changeInput","componentDidMount","fetch","then","res","json","setState","console","log","length","e","target","value","render","map","item","price"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport List from \"./components/List/index\";\nimport Task from \"./components/Task/index\";\n\nimport './App.css';\n\n\nclass Main extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            total: '0',\n            tasks: [\n                {id: 0, title: 'task1', done: false},\n                {id: 1, title: 'task2', done: true},\n                {id: 2, title: 'task3', done: false}\n            ],\n            newTask: ''\n        }\n        this.addCart = this.addCart.bind(this)\n        this.addTask = this.addTask.bind(this)\n        this.changeInput = this.changeInput.bind(this)\n    }\n    componentDidMount() {\n        fetch('https://fakestoreapi.com/products')\n            .then(res=>res.json())\n            .then(json=>{\n                this.setState({\n                    products: json\n                })\n            })\n    }\n    addCart(){\n        const {products, total} = this.state;\n        console.log(products)\n    }\n    addTask() { \n        const {tasks, newTask} = this.state;\n        newTask && this.setState({\n            tasks: [...this.state.tasks, {id: tasks.length ,\n                title: newTask,\n                done: false}],\n            newTask: ''\n            }) \n    }\n    changeInput(e){\n        this.setState({\n            newTask: e.target.value \n        })\n        console.log(this.state.newTask);  \n    }\n    render() {\n        const {products, total} = this.state;\n        return (\n            <div>\n                <div className='cart'>\n                    <span>Total:</span>\n                    <span>{total}</span>\n                </div>\n                {products.length ? products.map((item) => <div key={item.id}>\n                    <h3>{item.title}</h3>\n                    <span className='price'>{item.price}</span>\n                    <button onClick={addCart(item)}>Add to cart</button>\n                </div>)\n                : <p>Loading...</p>\n                }\n                \n            </div>\n        )\n    }\n}\n\nexport default Main;\n\n// CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач"]},"metadata":{},"sourceType":"module"}