{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Documents/GitHub/react/lessons4/src/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport List from \"./components/List/index\";\nimport UsernameInput from \"./components/UsernameInput/index\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [user, setUser] = useState([]);\n\n  const inputnameUser = username => {\n    if (!user.includes(username)) {\n      setUser([...user, username]); //ocalStorage.setItem(user, [])\n    } else {\n      let taskUser = JSON.parse(localStorage.getItem(username));\n      setTasks(taskUser);\n      console.log(username, 'taskk', tasks, 'i eto', taskUser);\n    }\n\n    console.log(user); // const arr = JSON.parse(localStorage.getItem({user}))\n    // console.log(arr)\n    // if ({user}) {\n    //     console.log(localStorage.getItem(user))\n    // }  else {\n    //     localStorage.setItem(user,[])\n    //     //console.log(user)\n    // }\n  };\n\n  const saveTask = userInput => {\n    if (userInput) {\n      const newTask = {\n        id: Math.random().toString(36).substr(2, 9),\n        task: userInput.userInput,\n        check: false\n      };\n      setTasks([...tasks, newTask]);\n    }\n  };\n\n  const removeTask = delTask => {\n    setTasks([...tasks.filter(el => el.id !== delTask)]);\n  };\n\n  const toggleTask = id => {\n    setTasks([...tasks.map(el => el.id === id ? { ...el,\n      check: !el.check\n    } : { ...el\n    })]);\n  };\n\n  useEffect(() => {\n    //user && localStorage.setItem(user,[]);\n    // let arr = JSON.parse(localStorage.getItem(user));\n    // console.log(arr);\n    // arr.push({tasks});\n    localStorage.setItem(user[user.length - 1], tasks);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(UsernameInput, {\n      inputnameUser: inputnameUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"ToDoList: \", tasks.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      saveTask: saveTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), tasks.map(el => {\n      console.log(el);\n      return /*#__PURE__*/_jsxDEV(List, {\n        todo: el,\n        removeTask: removeTask,\n        toggleTask: toggleTask\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"3oA78ZfcfC7YbI+YuAMl/WCsgd8=\");\n\n_c = Main;\nexport default Main; // CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/ekaterina/Documents/GitHub/react/lessons4/src/Main.jsx"],"names":["React","useEffect","useState","CustomInput","List","UsernameInput","Main","tasks","setTasks","user","setUser","inputnameUser","username","includes","taskUser","JSON","parse","localStorage","getItem","console","log","saveTask","userInput","newTask","id","Math","random","toString","substr","task","check","removeTask","delTask","filter","el","toggleTask","map","setItem","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport {useState}  from \"react\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport List from \"./components/List/index\";\nimport UsernameInput from \"./components/UsernameInput/index\";\n\nimport './App.css';\n\nconst Main = () => {\n    const [tasks, setTasks] = useState([]);\n    const [user, setUser] = useState([])\n\n    const inputnameUser = (username) => {\n        \n        if (!user.includes(username)) {\n            setUser([...user, username])\n            //ocalStorage.setItem(user, [])\n        } else {\n            let taskUser = JSON.parse(localStorage.getItem(username))\n            setTasks(taskUser);\n            console.log(username, 'taskk', tasks,  'i eto', taskUser)\n        }\n        console.log(user)\n        // const arr = JSON.parse(localStorage.getItem({user}))\n        // console.log(arr)\n        // if ({user}) {\n            \n        //     console.log(localStorage.getItem(user))\n        // }  else {\n        //     localStorage.setItem(user,[])\n        //     //console.log(user)\n        // }\n    }\n    const saveTask = (userInput) => {\n        if (userInput) {\n            const newTask = {\n                id: Math.random().toString(36).substr(2,9),\n                task: userInput.userInput,\n                check: false\n            }\n            setTasks([...tasks, newTask])\n        }\n    }\n    const removeTask = (delTask) => {\n        setTasks([...tasks.filter((el) => el.id !== delTask)])\n    }\n    const toggleTask = (id) => {\n        setTasks([\n            ...tasks.map((el) => \n                el.id === id ? {...el, check: !el.check} : {...el})])\n    }\n    \n    useEffect(() => {\n        //user && localStorage.setItem(user,[]);\n        // let arr = JSON.parse(localStorage.getItem(user));\n        // console.log(arr);\n        // arr.push({tasks});\n        localStorage.setItem(user[user.length-1], tasks)\n    }, [user]);\n    \n   \n    return (\n        <div className=\"main\">\n            <UsernameInput \n              \n                inputnameUser = {inputnameUser}\n            />\n            <h1>ToDoList: {tasks.length}</h1>\n            <CustomInput     \n                saveTask={saveTask}/>   \n                {tasks.map((el) => {\n                console.log(el)\n                return (\n                    <List \n                        todo={el}\n                        key={el.id}\n                        removeTask={removeTask}\n                        toggleTask = {toggleTask}\n                    />\n                )\n            })}\n\n\n        </div>\n    )\n}\n\n\n\nexport default Main;\n\n// CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач"]},"metadata":{},"sourceType":"module"}