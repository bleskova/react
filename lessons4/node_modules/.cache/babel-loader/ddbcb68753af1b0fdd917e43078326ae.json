{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Documents/GitHub/react/lessons4/src/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport List from \"./components/List/index\";\nimport UsernameInput from \"./components/UsernameInput/index\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [user, setUser] = useState([]); // const [tasks, saveTask] = useState([]);\n  // const [user, setUser] = useState();\n  // const [users, saveUser] = useState([]);\n\n  const inputnameUser = user => {\n    const arr = JSON.parse(localStorage.getItem({\n      user\n    }));\n    console.log(arr);\n\n    if (localStorage.getItem(user)) {\n      console.log(user);\n    } else {\n      localStorage.setItem(user, []);\n      console.log(user);\n    }\n  };\n\n  const saveTask = userInput => {\n    if (userInput) {\n      const newTask = {\n        id: Math.random().toString(36).substr(2, 9),\n        task: userInput.userInput,\n        check: false\n      };\n      setTasks([...tasks, newTask]);\n    }\n  };\n\n  const removeTask = delTask => {\n    setTasks([...tasks.filter(el => el.id !== delTask)]);\n  }; //console.log(tasks)\n  // const saveUser = useState();\n  // useEffect(() => {\n  //     //user && localStorage.setItem(user,[]);\n  //     let arr = JSON.parse(localStorage.getItem(user));\n  //     console.log(arr);\n  //     arr.push({tasks});\n  //     localStorage.setItem(user, JSON.stringify(arr))\n  // }, [tasks, users]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(UsernameInput, {\n      user: user,\n      setUser: setUser,\n      inputnameUser: inputnameUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"ToDoList: \", tasks.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      saveTask: saveTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), tasks.map(el => {\n      console.log(el);\n      return /*#__PURE__*/_jsxDEV(List, {\n        todo: el,\n        removeTask: removeTask\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"FsBRWWN94uhlEcOrgd1wv1wLpnA=\");\n\n_c = Main;\nexport default Main; // CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/ekaterina/Documents/GitHub/react/lessons4/src/Main.jsx"],"names":["React","useEffect","useState","CustomInput","List","UsernameInput","Main","tasks","setTasks","user","setUser","inputnameUser","arr","JSON","parse","localStorage","getItem","console","log","setItem","saveTask","userInput","newTask","id","Math","random","toString","substr","task","check","removeTask","delTask","filter","el","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAwB,OAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,OAAO,WAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAFe,CAGf;AACA;AACA;;AACA,QAAMS,aAAa,GAAIF,IAAD,IAAU;AAC5B,UAAMG,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB;AAACP,MAAAA;AAAD,KAArB,CAAX,CAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;;AACA,QAAIG,YAAY,CAACC,OAAb,CAAqBP,IAArB,CAAJ,EAAgC;AAE5BQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACH,KAHD,MAGQ;AACJM,MAAAA,YAAY,CAACI,OAAb,CAAqBV,IAArB,EAA0B,EAA1B;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACH;AACJ,GAVD;;AAWA,QAAMW,QAAQ,GAAIC,SAAD,IAAe;AAC5B,QAAIA,SAAJ,EAAe;AACX,YAAMC,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAoC,CAApC,CADQ;AAEZC,QAAAA,IAAI,EAAEP,SAAS,CAACA,SAFJ;AAGZQ,QAAAA,KAAK,EAAE;AAHK,OAAhB;AAKArB,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR;AACH;AACJ,GATD;;AAUA,QAAMQ,UAAU,GAAIC,OAAD,IAAa;AAC5BvB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACyB,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACV,EAAH,KAAUQ,OAA/B,CAAJ,CAAD,CAAR;AACH,GAFD,CA3Be,CA+Bf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,aAAD;AACI,MAAA,IAAI,EAAItB,IADZ;AAEI,MAAA,OAAO,EAAIC,OAFf;AAGI,MAAA,aAAa,EAAIC;AAHrB;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,+BAAeJ,KAAK,CAAC2B,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,WAAD;AACI,MAAA,QAAQ,EAAEd;AADd;AAAA;AAAA;AAAA;AAAA,YAPJ,EASSb,KAAK,CAAC4B,GAAN,CAAWF,EAAD,IAAQ;AACnBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,EAAZ;AACA,0BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAEA,EADV;AAGI,QAAA,UAAU,EAAEH;AAHhB,SAESG,EAAE,CAACV,EAFZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KATI,CATT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAlED;;GAAMjB,I;;KAAAA,I;AAsEN,eAAeA,IAAf,C,CAEA;AACA;AACA","sourcesContent":["import React, { useEffect } from \"react\";\nimport {useState}  from \"react\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport List from \"./components/List/index\";\nimport UsernameInput from \"./components/UsernameInput/index\";\n\nimport './App.css';\n\nconst Main = () => {\n    const [tasks, setTasks] = useState([]);\n    const [user, setUser] = useState([])\n    // const [tasks, saveTask] = useState([]);\n    // const [user, setUser] = useState();\n    // const [users, saveUser] = useState([]);\n    const inputnameUser = (user) => {\n        const arr = JSON.parse(localStorage.getItem({user}))\n        console.log(arr)\n        if (localStorage.getItem(user)) {\n            \n            console.log(user)\n        }  else {\n            localStorage.setItem(user,[])\n            console.log(user)\n        }\n    }\n    const saveTask = (userInput) => {\n        if (userInput) {\n            const newTask = {\n                id: Math.random().toString(36).substr(2,9),\n                task: userInput.userInput,\n                check: false\n            }\n            setTasks([...tasks, newTask])\n        }\n    }\n    const removeTask = (delTask) => {\n        setTasks([...tasks.filter((el) => el.id !== delTask)])\n    }\n\n    //console.log(tasks)\n    // const saveUser = useState();\n    // useEffect(() => {\n    //     //user && localStorage.setItem(user,[]);\n    //     let arr = JSON.parse(localStorage.getItem(user));\n    //     console.log(arr);\n    //     arr.push({tasks});\n    //     localStorage.setItem(user, JSON.stringify(arr))\n    // }, [tasks, users]);\n    \n   \n    return (\n        <div className=\"main\">\n            <UsernameInput \n                user = {user}\n                setUser = {setUser}\n                inputnameUser = {inputnameUser}\n            />\n            <h1>ToDoList: {tasks.length}</h1>\n            <CustomInput     \n                saveTask={saveTask}/>   \n                {tasks.map((el) => {\n                console.log(el)\n                return (\n                    <List \n                        todo={el}\n                        key={el.id}\n                        removeTask={removeTask}\n                    />\n                )\n            })}\n\n\n        </div>\n    )\n}\n\n\n\nexport default Main;\n\n// CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач"]},"metadata":{},"sourceType":"module"}