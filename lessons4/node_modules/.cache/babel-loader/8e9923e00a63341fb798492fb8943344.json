{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Documents/GitHub/react/lessons4/src/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport List from \"./components/List/index\";\nimport UsernameInput from \"./components/UsernameInput/index\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [user, setUser] = useState(Object.keys(localStorage));\n  const [currentUser, setCurrentUser] = useState(); //username input\n\n  const inputnameUser = username => {\n    setCurrentUser(username); //getStor(user, username)\n\n    console.log(user); //setUser(['2rf', '23t'])\n    //console.log(JSON.parse(localStorage))\n\n    if (!user.includes(username)) {\n      setUser([...user, username]);\n      localStorage.setItem(username, \"[]\");\n      console.log(user);\n    } // } else {\n    //     let taskUser = JSON.parse(localStorage.getItem(username))\n    //     //setTasks(taskUser);\n    //     console.log(username, 'taskk', tasks,  'i eto', taskUser)\n    // }\n\n  }; //dellete task\n\n\n  const removeTask = delTask => {\n    setTasks([...tasks.filter(el => el.id !== delTask)]);\n  }; //done task\n\n\n  const toggleTask = id => {\n    setTasks([...tasks.map(el => el.id === id ? { ...el,\n      check: !el.check\n    } : { ...el\n    })]);\n  };\n\n  useEffect(() => {\n    console.log('1');\n\n    if (user.includes(currentUser)) {\n      setTasks(JSON.parse(localStorage.getItem(currentUser)));\n    } else {//localStorage.setItem(currentUser, \"[]\");\n    }\n  }, [user, currentUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(UsernameInput, {\n      inputnameUser: inputnameUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"ToDoList: \", tasks.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      tasks: tasks,\n      setTasks: setTasks,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), tasks.map(el => {\n      console.log(el);\n      return /*#__PURE__*/_jsxDEV(List, {\n        todo: el,\n        removeTask: removeTask,\n        toggleTask: toggleTask\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"atJxBbfySaA0EjkRL1fWsDTphmA=\");\n\n_c = Main;\nexport default Main; // CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/ekaterina/Documents/GitHub/react/lessons4/src/Main.jsx"],"names":["React","useEffect","useState","CustomInput","List","UsernameInput","Main","tasks","setTasks","user","setUser","Object","keys","localStorage","currentUser","setCurrentUser","inputnameUser","username","console","log","includes","setItem","removeTask","delTask","filter","el","id","toggleTask","map","check","JSON","parse","getItem","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport {useState}  from \"react\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport List from \"./components/List/index\";\nimport UsernameInput from \"./components/UsernameInput/index\";\n\nimport './App.css';\n\nconst Main = () => {\n    const [tasks, setTasks] = useState([]);\n    const [user, setUser] = useState(Object.keys(localStorage));\n    const [currentUser, setCurrentUser] = useState();\n    //username input\n    const inputnameUser = (username) => {\n            setCurrentUser(username)\n            //getStor(user, username)\n            console.log(user)\n            //setUser(['2rf', '23t'])\n            //console.log(JSON.parse(localStorage))\n        if (!user.includes(username)) {\n            setUser([...user, username])\n            localStorage.setItem(username, \"[]\")\n            console.log(user)}\n        // } else {\n        //     let taskUser = JSON.parse(localStorage.getItem(username))\n        //     //setTasks(taskUser);\n        //     console.log(username, 'taskk', tasks,  'i eto', taskUser)\n        // }\n    }\n    //dellete task\n    const removeTask = (delTask) => {\n        setTasks([...tasks.filter((el) => el.id !== delTask)])\n    }\n    //done task\n    const toggleTask = (id) => {\n        setTasks([\n            ...tasks.map((el) => \n                el.id === id ? {...el, check: !el.check} : {...el})])\n    }\n\n    useEffect(() => {\n        console.log('1')\n        if (user.includes(currentUser)) {\n            setTasks(JSON.parse(localStorage.getItem(currentUser)))\n        } else {\n            //localStorage.setItem(currentUser, \"[]\");\n        }\n    }, [user, currentUser]);\n    \n   \n    return (\n        <div className=\"main\">\n            <UsernameInput               \n                inputnameUser = {inputnameUser}\n            />\n            <h1>ToDoList: {tasks.length}</h1>\n            <CustomInput     \n                tasks={tasks}\n                setTasks = {setTasks}\n                currentUser = {currentUser}\n                />   \n                {tasks.map((el) => {\n                console.log(el)\n                return (\n                    <List \n                        todo={el}\n                        key={el.id}\n                        removeTask={removeTask}\n                        toggleTask = {toggleTask}\n                    />\n                )\n            })}\n        </div>\n    )\n}\n\n\n\nexport default Main;\n\n// CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач"]},"metadata":{},"sourceType":"module"}