{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Documents/GitHub/react/lessons2/src/Main.jsx\";\nimport React from \"react\";\nimport Block from \"./components/Block/block\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport Task from \"./components/Task/index\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [// {id: 0, title: 'task1', done: false},\n        // {id: 1, title: 'task2', done: true},\n        // {id: 2, title: 'task3', done: false}\n      ],\n      newTask: ''\n    };\n    this.addTask = this.addTask.bind(this);\n    this.changeInput = this.changeInput.bind(this);\n  }\n\n  addTask() {\n    this.setState(state => {\n      const {\n        tasks,\n        newTask\n      } = state; //console.log(e);\n\n      tasks.push({\n        id: tasks.length,\n        title: newTask,\n        done: false\n      });\n      console.log(tasks);\n    });\n  }\n\n  changeInput(e) {\n    this.setState({\n      newTask: e.target.value\n    });\n    console.log(this.state.newTask);\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Active tasks: \", tasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 36\n      }, this)), /*#__PURE__*/_jsxDEV(CustomInput, {\n        change: e => this.changeInput(e),\n        addChange: e => this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main; // CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач","map":{"version":3,"sources":["/Users/ekaterina/Documents/GitHub/react/lessons2/src/Main.jsx"],"names":["React","Block","CustomInput","Task","Main","Component","constructor","props","state","tasks","newTask","addTask","bind","changeInput","setState","push","id","length","title","done","console","log","e","target","value","render","map","task"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CACH;AACA;AACA;AAHG,OADE;AAMTC,MAAAA,OAAO,EAAE;AANA,KAAb;AAQA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AAEH;;AACDD,EAAAA,OAAO,GAAG;AAEN,SAAKG,QAAL,CAAcN,KAAK,IAAI;AACnB,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAmBF,KAAzB,CADmB,CAGnB;;AACCC,MAAAA,KAAK,CAACM,IAAN,CAAW;AACRC,QAAAA,EAAE,EAAEP,KAAK,CAACQ,MADF;AAERC,QAAAA,KAAK,EAAER,OAFC;AAGRS,QAAAA,IAAI,EAAE;AAHE,OAAX;AAKDC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACJ,KAVA;AAWH;;AACDI,EAAAA,WAAW,CAACS,CAAD,EAAG;AAEV,SAAKR,QAAL,CAAc;AACVJ,MAAAA,OAAO,EAAEY,CAAC,CAACC,MAAF,CAASC;AADR,KAAd;AAGAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWE,OAAvB;AAGH;;AACDe,EAAAA,MAAM,GAAG;AACL,UAAM;AAAChB,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACI;AAAA,8BACI;AAAA,+BACI;AAAA,uCAAmBC,KAAK,CAACQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKR,KAAK,CAACiB,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAlB,CAJL,eAMI,QAAC,WAAD;AACI,QAAA,MAAM,EAAGL,CAAD,IAAO,KAAKT,WAAL,CAAiBS,CAAjB,CADnB;AAEI,QAAA,SAAS,EAAGA,CAAD,IAAO,KAAKX;AAF3B;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AA1D6B;;AA6DlC,eAAeP,IAAf,C,CAEA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport Block from \"./components/Block/block\";\nimport CustomInput from \"./components/CustomInput/index\";\nimport Task from \"./components/Task/index\";\n\nimport './App.css';\n\nclass Main extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [\n                // {id: 0, title: 'task1', done: false},\n                // {id: 1, title: 'task2', done: true},\n                // {id: 2, title: 'task3', done: false}\n            ],\n            newTask: ''\n        }\n        this.addTask = this.addTask.bind(this)\n        this.changeInput = this.changeInput.bind(this)\n\n    }\n    addTask() { \n        \n        this.setState(state => {\n            const {tasks, newTask} = state;\n\n            //console.log(e);\n             tasks.push({\n                id: tasks.length ,\n                title: newTask,\n                done: false\n            })\n            console.log(tasks);\n       })\n    }\n    changeInput(e){\n        \n        this.setState({\n            newTask: e.target.value \n        })\n        console.log(this.state.newTask);\n       \n        \n    }\n    render() {\n        const {tasks} = this.state;\n        return (\n            <div>\n                <div>\n                    <h1>Active tasks: {tasks.length}</h1>\n                </div>\n                {tasks.map(task => <Task task={task}/>)\n                }\n                <CustomInput \n                    change={(e) => this.changeInput(e)} \n                    addChange={(e) => this.addTask}\n                />\n                {/* <input type=\"text\" value={text} onChange={(e) => this.changeText(e)} />\n                <p>{likes}</p>\n                <Block move={move}/>\n                <button onClick={(step) => this.changeLikes(10)}>touch me!</button>\n                <button onClick={this.onMove}>touch me!</button> */}\n            </div>\n        )\n    }\n}\n\nexport default Main;\n\n// CustomInput.tsx       // Форма для добавления новой задачи\n//     Task.tsx        // Задача\n//     List.tsx        // Список задач"]},"metadata":{},"sourceType":"module"}